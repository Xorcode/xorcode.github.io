<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Code | Xorcode]]></title>
  <link href="http://xorcode.com/blog/categories/code/atom.xml" rel="self"/>
  <link href="http://xorcode.com/"/>
  <updated>2017-03-29T04:07:39+00:00</updated>
  <id>http://xorcode.com/</id>
  <author>
    <name><![CDATA[]]></name>
    <email><![CDATA[hello@xorcode.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Foodles Kickstarter Launched]]></title>
    <link href="http://xorcode.com/code/2014/11/15/foodles-kickstarter-launched.html/"/>
    <updated>2014-11-15T11:10:00+00:00</updated>
    <id>http://xorcode.com/code/2014/11/15/foodles-kickstarter-launched</id>
    <content type="html"><![CDATA[<p>New Kickstarter launched! Foodl.es keeps all your favorite family recipes at your fingertips, no matter where your family meal traditions take you.</p>

<!-- more -->

<p>We at Xorcode finally fired up our <a href="http://kck.st/1veSwLo">Kickstarter for Foodles</a>! Having been busy with other projects it took us a while, but it’s finally here and we are ready to rock this project out.</p>

<iframe width="640" height="480" src="https://www.kickstarter.com/projects/torgny/foodles-your-heirloom-recipes-everywhere/widget/video.html" frameborder="0" scrolling="no" style="margin-bottom:15px;"> </iframe>

<blockquote>
  <p>Foodl.es isn’t just another online cookbook. We’ve taken the basic ingredients that you find in all cookbooks and thrown out the recipe. With a focus on preserving your family traditions it is something entirely special. So much of our family traditions are tied to food and meals shared with our loved ones. Foodl.es is not just a place to collect and organize your recipes, but also the preservation of family traditions by offering you the ability to attach a story, video or pictures to an individual recipe.</p>

  <p>We know that you don’t always want to share your family recipes, so all your recipes default to private and can be shared at your choosing, not ours. With different subscription levels you can customize your account to fit your needs. Our Individual Package, well, it’s pretty explanatory. The Family Package opens up collaborating with other users to share recipes and create a family cookbook. Our Community Package is perfect for larger groups that want to create a shared cookbook. All cookbooks can be stored online or sent to a printer for publication.</p>
</blockquote>

<p>Help us spread the word and by backing the <a href="http://kck.st/1veSwLo">Foodles</a> project on Kickstarter!</p>

<p><a class="button" href="http://kck.st/1veSwLo"><i class="fa fa-heart"></i> Kickstarter</a>
<a class="button" href="http://foodl.es/"><i class="fa fa-bullhorn"></i> Foodles Landing page</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Charlotte Meteor Hackathon #1]]></title>
    <link href="http://xorcode.com/cloud/code/2014/04/04/charlotte-meteor-hackathon-1.html/"/>
    <updated>2014-04-04T01:08:00+00:00</updated>
    <id>http://xorcode.com/cloud/code/2014/04/04/charlotte-meteor-hackathon-1</id>
    <content type="html"><![CDATA[<p>We will be hacking on an app or service that provides value to Charlotte and the local communities here as a project where we can get to know Meteor in depth from idea to deployment and production environment configuration.</p>

<!-- more -->

<p>Please join us and other developers and designers from Charlotte as we create something cool for fun and for our own education!</p>

<p>We will be providing food and drink for all Meteorites that attend. If you have any dietary preferences, please contact either Torgny or Jill so that we can plan accordingly.</p>

<p>Scott Deeter has volunteered to lead this hackathon. He has a bit of work done on the concept for a Craigslist clone and can help us all get started learning Meteor!</p>

<p>We are looking forward to joining with others to learn more about Meteor and its awesome features.</p>

<p><a href="http://bit.ly/PuyJoa" class="button">Join Us</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducing the Meteor Charlotte meetup group]]></title>
    <link href="http://xorcode.com/code/2014/03/03/introducing-meteor-charlotte-meetup-group.html/"/>
    <updated>2014-03-03T16:36:00+00:00</updated>
    <id>http://xorcode.com/code/2014/03/03/introducing-meteor-charlotte-meetup-group</id>
    <content type="html"><![CDATA[<p>Earlier this year we at Xorcode started a <a href="http://bit.ly/1fWi0DT">meetup group</a> for people interested in Meteor in Charlotte, NC. We had a pretty decent turnout the first meeting, with thirteen Meteorites in attendance. We’ve got several more meetings planned along with a hackathon.</p>

<!-- more -->

<p>So far we’re 28 Meteorites and growing. We’ve got a Hackathon planned for <a href="http://bit.ly/1jN03sl"><i class="fa fa-calendar"></i> March 10th, 2014 at 6:30pm</a> where we will begin hacking on an application that will benefit the local community in some way.</p>

<p>Do you have ideas for the next, cool local application that can help the people of Charlotte in their daily lives? If so, join our Hackathon and help us figure out what to build!</p>

<p><a href="http://bit.ly/1jMZw9J" class="button"><i class="fa fa-users"></i> Join Charlotte Meteor</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using New Relic's Node.js agent to monitor Geddy applications]]></title>
    <link href="http://xorcode.com/code/2013/10/24/using-new-relic-node-js-agent-to-monitor-geddy-applications.html/"/>
    <updated>2013-10-24T13:54:00+00:00</updated>
    <id>http://xorcode.com/code/2013/10/24/using-new-relic-node-js-agent-to-monitor-geddy-applications</id>
    <content type="html"><![CDATA[<p>Having used <a href="http://bit.ly/1pWLIgB">New Relic</a> for other projects we of course jumped on the chance to get started with <a href="http://bit.ly/1fCU83P">New Relic for Node.js</a> when our sales contact reached out to us right after their beta ended. We’ve got several projects using <a href="http://bit.ly/1pWLHcA">Geddy</a>, which is not supported out of the box, so we had to do some customization.</p>

<!-- more -->

<blockquote>
  <p>Pinpoint and solve your Node.js application performance issues! New Relic is the only tool you’ll need to see everything in your data intensive, real-time, Node.js applications—from application response times to server monitoring.</p>
</blockquote>

<p>New Relic for Node.js officially launched today, and the <a href="http://bit.ly/1fCU83Q">original press release</a> includes a short tutorial on how to get started, which we will also cover in this article.</p>

<h2 id="create-a-new-geddy-project">Create a new Geddy project</h2>

<p>Create a new Geddy project.</p>

<div class="highlighter-rouge"><pre class="highlight"><code>$ geddy gen app newrelic-test
$ cd newrelic-test
</code></pre>
</div>

<p>Let’s start with installing the New Relic Node.js agent.</p>

<div class="highlighter-rouge"><pre class="highlight"><code>$ npm install newrelic --save
</code></pre>
</div>

<h2 id="configuring-geddy-and-new-relic">Configuring Geddy and New Relic</h2>

<p>Once you have installed the agent, you need to copy the configuration file into the root of your project.</p>

<div class="highlighter-rouge"><pre class="highlight"><code>$ cp ./node_modules/newrelic/newrelic.js .
</code></pre>
</div>

<p>Open <code class="highlighter-rouge">newrelic.js</code> and change the value for <strong>app_name</strong> to the name of your application. Replace the value of <strong>license_key</strong> with your actual license key which you get from New Relic. We also change <strong>logging.level</strong> from <em>“trace”</em> to <em>“info”</em> to avoid agent log spam.</p>

<p>In order for New Relic to be able to properly report for your application we need to create a startup file since we can’t run this with the <code class="highlighter-rouge">geddy</code> command like we normally do locally.</p>

<div class="highlighter-rouge"><pre class="highlight"><code>$ npm install geddy --save
</code></pre>
</div>

<p>Create a new file in your project root called <code class="highlighter-rouge">app.js</code> and add the following to that file to get New Relic up and running in your Geddy project:</p>

<figure class="highlight"><figcaption>File: app.js</figcaption><pre><code class="language-js" data-lang="js"><span class="kd">var</span> <span class="nx">geddy</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'geddy'</span><span class="p">);</span>

<span class="nx">geddy</span><span class="p">.</span><span class="nx">startCluster</span><span class="p">({</span>
  <span class="na">hostname</span><span class="p">:</span> <span class="s1">'0.0.0.0'</span>
<span class="p">,</span> <span class="na">port</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">PORT</span> <span class="o">||</span> <span class="s1">'4000'</span>
<span class="p">,</span> <span class="na">environment</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">NODE_ENV</span> <span class="o">||</span> <span class="s1">'development'</span>
<span class="p">});</span></code></pre></figure>

<h2 id="loading-new-relic">Loading New Relic</h2>

<p>Load New Relic in your <code class="highlighter-rouge">config/init.js</code> script.</p>

<figure class="highlight"><figcaption>File: config/init.js</figcaption><pre><code class="language-js" data-lang="js"><span class="kd">var</span> <span class="nx">cluster</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'cluster'</span><span class="p">);</span>

<span class="k">if</span> <span class="p">(</span><span class="nx">cluster</span><span class="p">.</span><span class="nx">isWorker</span> <span class="o">&amp;&amp;</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">NODE_ENV</span> <span class="o">==</span> <span class="s1">'production'</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">NEW_RELIC_LOG</span> <span class="o">=</span> <span class="s1">'stdout'</span><span class="p">;</span>
  <span class="nx">geddy</span><span class="p">.</span><span class="nx">newrelic</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'newrelic'</span><span class="p">);</span>
<span class="p">}</span></code></pre></figure>

<p>We only require the New Relic module if we’re running in production. You can always remove the <code class="highlighter-rouge">if</code> statement around <code class="highlighter-rouge">require('newrelic')</code> if that makes more sense to you. We also prefer that New Relic logs to <code class="highlighter-rouge">stdout</code> instead of to a log file since we host on various different platforms and we might not want files to be created at all.</p>

<h2 id="scaffold-test-endpoint">Scaffold test endpoint</h2>

<p>We need something to report on, so let’s scaffold an endpoint for our application to report on.</p>

<div class="highlighter-rouge"><pre class="highlight"><code>$ geddy gen scaffold user username:string email:string
</code></pre>
</div>

<p>You’ll see output similar to this:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>[Added] app/models/user.js
[Added] db/migrations/20131024163436_create_users.js
[Added] test/models/user.js
[Added] test/controllers/users.js
[Added] app/controllers/users.js
[Added] Resource users route added to config/router.js
[Added] View templates
</code></pre>
</div>

<h2 id="name-requests-properly-in-geddy">Name requests properly in Geddy</h2>

<p>Open up <code class="highlighter-rouge">app/controllers/application.js</code> and change its contents to the following:</p>

<figure class="highlight"><figcaption>File: app/controllers/application.js</figcaption><pre><code class="language-js" data-lang="js"><span class="kd">var</span> <span class="nx">Application</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">before</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="nx">geddy</span><span class="p">.</span><span class="nx">newrelic</span><span class="p">.</span><span class="nx">setControllerName</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">controller</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">action</span><span class="p">);</span>
  <span class="p">});</span>
<span class="p">};</span>

<span class="nx">exports</span><span class="p">.</span><span class="nx">Application</span> <span class="o">=</span> <span class="nx">Application</span><span class="p">;</span></code></pre></figure>

<p>We are using <code class="highlighter-rouge">newrelic.setControllerName()</code> to name our requests so that they do not all get grouped under <code class="highlighter-rouge">/*</code> or similar in New Relic.</p>

<h2 id="run-your-application">Run your application</h2>

<p>Running our application with Node is simple:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>$ node app
</code></pre>
</div>

<p>Navigate to <a href="http://localhost:4000/">http://localhost:4000/</a> and then <a href="http://localhost:4000/users">http://localhost:4000/users</a> where you can start adding, editing, and removing users to get some sample data in your New Relic account.</p>

<p>Once you start your application you will begin to see data in New Relic within five minutes and your brand new Node.js application will be accessible from your New Relic dashboard.</p>

<h2 id="repository">Repository</h2>

<p>You can take a look at our example repository if you want to make sure you didn’t miss anything.</p>

<p><a href="http://bit.ly/1pWLIgG" class="button"><i class="fa fa-bitbucket"></i> Fork on Bitbucket</a></p>

<h2 id="documentation">Documentation</h2>

<p>For more information, please see the <a href="http://geddyjs.org/reference#controllers.params">Geddy documentation</a> on controllers as well as the <a href="https://github.com/newrelic/node-newrelic/#transactions-and-request-naming">New Relic Node.js project</a>.</p>

<h2 id="thank-yous">Thank yous</h2>

<p>Thanks to <a href="https://github.com/ben-ng">Ben Ng</a> for finding the memory leak issue with New Relic and for supplying a fix.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento: Generic URL Rewrite Importer]]></title>
    <link href="http://xorcode.com/code/2013/09/15/magento-generic-url-rewrite-importer.html/"/>
    <updated>2013-09-15T12:26:00+00:00</updated>
    <id>http://xorcode.com/code/2013/09/15/magento-generic-url-rewrite-importer</id>
    <content type="html"><![CDATA[<p>Ever needed to import a large set of generic URL rewrites into Magento? The Generic URL Rewrite Importer for Magento helps you do just that!
<!--more-->
Xorcode just moved a sizable e-commerce site from <a href="http://xorcode.net/193sDO2">WordPress</a>/<a href="http://xorcode.net/193sCtt">WooCommerce</a> to <a href="http://xorcode.net/1efkdKU">Magento</a>. We faced the daunting task of creating over 20,000 URL rewrites since the URL slug structure of Magento ended up being slightly different from what WordPress created.</p>

<p>Manually entering 20,000+ URL rewrites didn’t sound like fun, so we looked at other options. We could buy an extension, or we could write our own for this specific task. We choose to roll our own. Since we wrote it, we’ll share it with you, for free. If you use it and like it, you can always <a href="https://flattr.com/profile/xorcode">Flattr</a> this article, or send us a donation with PayPal.</p>

<form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input type="hidden" name="cmd" value="_s-xclick" />
<input type="hidden" name="hosted_button_id" value="SADU3WX2H6CFY" />
<input type="image" src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif" border="0" name="submit" alt="PayPal - The safer, easier way to pay online!" />
<img alt="" border="0" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1" />
</form>

<h3 id="usage">Usage</h3>

<p>Install the extension in your Magento site by logging into your admin panel and going to <em>Magento Connect Manager</em>, which is under the <em>System</em> menu. Once there, use the <strong>Direct package file upload</strong> option and upload the package file supplied with this article.</p>

<p><a href="http://xorcode.net/1bwM9dc" class="button"><i class="fa fa-download"></i> Download URL Rewrite Importer</a></p>

<h3 id="creating-an-import-profile">Creating an import profile</h3>

<p>Once you have installed the package you need to create a new <strong>Advanced Dataflow Profile</strong>, you can find this under <em>System &gt; Import/Export &gt; Dataflow - Advanced Profiles</em>. Create your profile, name it anything you want, we suggest “Xorcode Dataflow Urlrewrite Importer.”</p>

<p>Enter the following <abbr title="eXtended Markup Language">XML</abbr> in the <em>Actions XML</em> field:</p>

<div class="language-xml highlighter-rouge"><pre class="highlight"><code><span class="nt">&lt;action</span> <span class="na">type=</span><span class="s">"dataflow/convert_adapter_io"</span> <span class="na">method=</span><span class="s">"load"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"type"</span><span class="nt">&gt;</span>file<span class="nt">&lt;/var&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"path"</span><span class="nt">&gt;</span>var/import<span class="nt">&lt;/var&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"filename"</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[url_rewrites.csv]]&gt;</span><span class="nt">&lt;/var&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"format"</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[csv]]&gt;</span><span class="nt">&lt;/var&gt;</span>
<span class="nt">&lt;/action&gt;</span>
<span class="nt">&lt;action</span> <span class="na">type=</span><span class="s">"dataflow/convert_parser_csv"</span> <span class="na">method=</span><span class="s">"parse"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"delimiter"</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[,]]&gt;</span><span class="nt">&lt;/var&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"enclose"</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA["]]&gt;</span><span class="nt">&lt;/var&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"fieldnames"</span><span class="nt">&gt;</span>true<span class="nt">&lt;/var&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"store"</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[default]]&gt;</span><span class="nt">&lt;/var&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"options"</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[RP]]&gt;</span><span class="nt">&lt;/var&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"number_of_records"</span><span class="nt">&gt;</span>50<span class="nt">&lt;/var&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"decimal_separator"</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[.]]&gt;</span><span class="nt">&lt;/var&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"adapter"</span><span class="nt">&gt;</span>dataflow/convert_adapter_urlrewrite<span class="nt">&lt;/var&gt;</span>
    <span class="nt">&lt;var</span> <span class="na">name=</span><span class="s">"method"</span><span class="nt">&gt;</span>parse<span class="nt">&lt;/var&gt;</span>
<span class="nt">&lt;/action&gt;</span>
</code></pre>
</div>

<p>You may wish to change the value of <code class="highlighter-rouge">store</code> and <code class="highlighter-rouge">options</code> to something other than the defaults provided. For instance, if your store’s name is <strong>Example</strong>, enter <code class="highlighter-rouge">example</code> in the <abbr title="Character Data">CDATA</abbr> for the <code class="highlighter-rouge">store</code> var.</p>

<p>Upload a file called <code class="highlighter-rouge">url_rewrites.csv</code> to your web server and place it in the <code class="highlighter-rouge">var/import</code> folder of your Magento folder. You may have to create the <code class="highlighter-rouge">var/import</code> folder.</p>

<p>Now you are ready to run the profile. Click the <strong>Run Profile</strong> tab on the Dataflow profile, then click <strong>Run Profile in Popup</strong> and wait for magic.</p>

<p>If you have any suggestions, ideas, or bug reports, please <a href="http://xorcode.net/193vmHs">file issues in our repository</a>.</p>
]]></content>
  </entry>
  
</feed>
